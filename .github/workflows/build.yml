name: Build BRICK

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build BRICK (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        arch: [x86_64, arm64]
        include:
          - arch: x86_64
            runner: ubuntu-24.04
          - arch: arm64
            runner: ubuntu-24.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: '17'

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: sbt-cache-${{ matrix.arch }}-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            sbt-cache-${{ matrix.arch }}-

      - name: Install LLVM and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang lld libunwind-dev

      - name: Compile
        run: sbt nativeLink

      - name: Upload Native Binary
        uses: actions/upload-artifact@v4
        with:
          name: brick-linux-${{ matrix.arch }}
          path: target/scala-*/brick

      - name: Prepare nfpm
        run: |
          if [ "${{ matrix.arch }}" = "x86_64" ]; then
            echo "NFPM_ARCH=amd64" >> $GITHUB_ENV
            echo "RPM_ARCH=x86_64" >> $GITHUB_ENV
          else
            echo "NFPM_ARCH=arm64" >> $GITHUB_ENV
            echo "RPM_ARCH=aarch64" >> $GITHUB_ENV
          fi
          mkdir -p dist
          mkdir -p bin
          cp target/scala-*/brick bin/brick
      
      - name: Build Packages
        run: |
          nfpm pkg --packager deb \
            --config nfpm.yaml \
            --target dist/brick_${VERSION}_${NFPM_ARCH}.deb \
            --env ARCH=${NFPM_ARCH} \
            --env VERSION=${VERSION}

          nfpm pkg --packager rpm \
            --config nfpm.yaml \
            --target dist/brick-${VERSION}-1.${RPM_ARCH}.rpm \
            --env ARCH=${NFPM_ARCH} \
            --env VERSION=${VERSION}
      
      - name: Create Arch PKGBUILD
        run: |
          mkdir -p archpkg
          cat > archpkg/PKGBUILD <<EOF
pkgname=brick
pkgver=$VERSION
pkgrel=1
arch=('${RPM_ARCH}')
url="https://cy4.dev/brick"
license=('MIT')
depends=()
source=('brick-linux-${RPM_ARCH}')
package() {
  install -Dm755 "\$srcdir/brick-linux-\$RPM_ARCH" "\$pkgdir/usr/bin/brick"
}
          EOF
          cp bin/brick archpkg/brick-linux-${RPM_ARCH}
          cd archpkg
          makepkg --nodeps --force --noprogressbar --skipchecksums
          cp brick-*.pkg.tar.zst ../dist/
          rm -f brick-*.tar.zst

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: dist/